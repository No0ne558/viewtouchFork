name: Build AppImages

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  appimage:
    name: AppImage for Debian-based Systems (x86_64)
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install deps
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            build-essential cmake git \
            libx11-dev libxft-dev libxmu-dev libxpm-dev libxrender-dev libxt-dev \
            libfreetype6-dev libfontconfig1-dev zlib1g-dev \
            libmotif-dev libcurl4-openssl-dev \
            patchelf file desktop-file-utils libglib2.0-bin \
            libfuse2 squashfs-tools \
            pkg-config

      - name: Build
        run: |
          echo "=== CMake Configure ==="
          cmake -B build -DCMAKE_BUILD_TYPE=Release 2>&1
          echo "=== CMake Build ==="
          cmake --build build -j$(nproc) 2>&1

      - name: Stage AppDir
        run: |
          cd build
          rm -rf AppDir
          DESTDIR=AppDir cmake --install .
          install -Dm755 ../packaging/appimage/AppRun AppDir/AppRun
          install -Dm644 ../packaging/appimage/viewtouch.desktop AppDir/viewtouch.desktop
          if [ -f ../packaging/appimage/viewtouch.png ]; then \
            install -Dm644 ../packaging/appimage/viewtouch.png AppDir/viewtouch.png; \
          else \
            cp ../xpm/demo.png AppDir/viewtouch.png; \
          fi
          # ensure desktop file references executable in AppDir
          sed -i 's#Exec=vtpos#Exec=usr/viewtouch/bin/vtpos#' AppDir/viewtouch.desktop || true
          # place desktop/icon where appimagetool expects them
          mkdir -p AppDir/usr/share/applications
          cp AppDir/viewtouch.desktop AppDir/usr/share/applications/viewtouch.desktop
          mkdir -p AppDir/usr/share/icons/hicolor/256x256/apps
          cp AppDir/viewtouch.png AppDir/usr/share/icons/hicolor/256x256/apps/viewtouch.png
          echo "AppDir layout:" && find AppDir -maxdepth 3 -type f | sort | sed 's#^#  #'

      - name: Download appimagetool
        run: |
          curl -L https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage -o appimagetool.AppImage
          chmod +x appimagetool.AppImage

      - name: Build AppImage
        env:
          APPIMAGE_EXTRACT_AND_RUN: "1"
        run: |
          set -e
          cd build
          chmod +x AppDir/AppRun
          
          # Bundle additional libraries for Debian-based distributions
          echo "=== Bundling libraries for Debian family ==="
          mkdir -p AppDir/usr/lib
          
          # Copy essential libraries that vary between Debian-based distros
          LIB_ARCH="x86_64-linux-gnu"
          
          # Bundle X11 and rendering libraries common across Debian family
          for lib in libXft.so.2 libXmu.so.6 libXpm.so.4 libXrender.so.1 \
                     libfontconfig.so.1 libfreetype.so.6 libXm.so.4 \
                     libXt.so.6 libX11.so.6; do
            if [ -f "/usr/lib/$LIB_ARCH/$lib" ]; then
              cp "/usr/lib/$LIB_ARCH/$lib" AppDir/usr/lib/ || true
              echo "  Bundled: $lib"
            fi
          done
          
          # Bundle additional Debian-specific libraries that may vary
          for lib in libcurl.so.4 libssl.so.3 libcrypto.so.3; do
            if [ -f "/usr/lib/$LIB_ARCH/$lib" ]; then
              cp "/usr/lib/$LIB_ARCH/$lib" AppDir/usr/lib/ || true
              echo "  Bundled: $lib"
            fi
          done
          
          # Create AppImage with bundled libraries
          ../appimagetool.AppImage -n AppDir

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: viewtouch-AppImage-debian-x86_64
          path: build/*.AppImage

      - name: Create Release (tag push only)
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: build/*.AppImage
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}